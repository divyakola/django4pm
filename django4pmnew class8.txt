			Django
			-------
what is Django?
---------------
	Django is a python related high-level web application framework.

	it makes easier to build better web applications with less code and more quickly.

	Django Follows MVT design Pattern/architecture.

history of Django:
-----------------
	Django was developed by "Adrian Holovathy and simion wilison" in the year of 2003,

	but officially announce it is a open-source project in the year of 2005.

	the name Django was derived from the famous guitarist "Django Reinhrdt".

advantages of Django:
---------------------
1).faster development
2).fully loaded
3).security
4).scalable
5).versatile
6).lesscode

features of Django:
-------------------
1).Django follows MVT design pattern/architecture
2).Django follows ORM(Object Relational Mapper)
3).Django provides builtin database is called sqlite3
4).Django provides builtin lightweight web-server is called DDS(Django Development Server)
5).Django provides builtin admin interface
6).django provides customizable admin interface
7).Django is free and opensource
8).django provides great documentation

note:
----
django is a free and opensource,it is maintaned by DSF(Django Software Foundation) team.

Django architecture(MVT):
------------------------
	Whenever End-user sends the url request , that request is received by the url dispatcher.

	Url dispatcher is a program that verifies wheather that given url is valid or not by communicating with "urls.py".

	Whenever we are creating a project in Django framework then by default "urls.py" file is created in the project folder.

	We can define a url patterns by using a concept of Regular Expressions.

	If the requested url is not matching with any one of the url pattern of "urls.py" file then url dispatcher gives an error.

	Every url pattern of "urls.py" file should be registered with a view.

	A view is a python function (or) python class which receives client request, process that request and gives the response to that request.

	All view functions (or) view classes should be defines within the "views.py" file.

	The "views.py" file is created automatically in application folder whenever we create an application in our project.

	While processing the client request view can be communicating with database through the "models".

	A model is a python class which represents tables in a database.

	All model classes are created in "models.py" file of the application in our project

	"models.py" file is created automatically in application folder whenever we create an application in our project.

	After processing the client request by the view, the view can transfer the data to the template.

	A template is a HTML file, in which  we can include the python code by using Template languages(DTL ,Jinja2)

	Template language is a special language supported by Django framework.

	By using  Template languages we can achieve html code reusability.

	After including the data within template, template will be given to the browser before that template will be stored into the "cache framework".

	Whenever same requests is received by the view then without processing that request cache template will be given to the browser (or) end- user.


what is MVT?
-------------
Model	-->to represent the database logics
	
	a model is a python class,which is used to represent the database logics.

View	-->to represent business logics

	view is a python function or class,it takes the request from the end user,process that request and give back the reponse to the enduser.

Template --> to reprsenting presentation logics

	a template is nothing but a html file,which we can include python code by using some template language(DTL,Jinja2)


who uses Django?
---------------
Youtube,pinterest,Nasa,instagram,disqus,quora,mozilla,washingto DC,netflix,...

Django Environment setup:
-------------------------
1).python
2).IDE's
3).virtualenv
4).Django


what is virtualenv?
-------------------
	virtualenv is a tool,which is used to create isolated python virtual environments.

how to install virtualenv?
--------------------------
	pip install virtualenv

how to create our own virtual environment?
------------------------------------------
	virtualenv  ourownvirtualenvironmentname

ex:
---
	virtualenv myvenv

how to activate our own virtual environment?
-----------------------------------------
	we can activate our own virtual environment by using following syntax

	ourownvirtualenvironmentname\scripts\activate

ex:
---
F:\django4pm>myvenv\scripts\activate

(myvenv) F:\django4pm>


how to deactivate our own virtual environment?
-----------------------------------------
	we can deactivate our own virtual environment by using following syntax

	ourownvirtualenvironmentname\scripts\deactivate

ex:
----
(myvenv) F:\django4pm>myvenv\scripts\deactivate
F:\django4pm>

	after activating our own virtual environment next we need to install django.


 