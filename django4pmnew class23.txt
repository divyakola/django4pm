Model Form
-----------
	our form is related to model,that type of forms are called Modelforms.

ex:
----
step1:
-----
to create a project

	django-admin startproject proj23

step2:
------
goto project location and to create an application in that project location

	cd proj23

	python manage.py startapp app23

step3:
-----
to install our application in setting.py file of the project

	settings.py
	-----------
INSTALLED_APPS = [
    
    'app23'
]

step4:
-----
to create a model in models.py file of the application

	models.py
	---------
from django.db import models

# Create your models here.
class studnet(models.Model):
    sid=models.IntegerField(primary_key=True)
    sname=models.CharField(max_length=20)
    sadd=models.CharField(max_length=50)
    scontact=models.IntegerField()
    
step5:
-----
to check the errors in our model

	python manage.py check

step6:
-----
to apply the makemigrations

	python manage.py makemigrations

step7:
------
to apply the migrate

	python manage.py migrate

step8:
----
to create a modelform in forms.py file of the application

	forms.py
	---------
from django import forms
from .models import student

class student_form(forms.ModelForm):
    class Meta:
        model=student
        fields="__all__"

step9:
-----
to create a templates and to set the path for our templates in settings.py file of the project.

	settings.py
	-----------
TEMPLATES = [
    {
        
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        
    },
]

step10:
-------
to create a view in views.py file of the application

	views.py
	---------
from django.shortcuts import render
from .forms import student_form
from .models import student
from django.http import HttpResponse
# Create your views here.
def studentinfo(request):
    if request.method=="POST":
        s=student_form(request.POST)
        if s.is_valid():
            s.save()
            return HttpResponse("inserted successfully")
    else:
        s=student_form()
        return render(request,'std_info.html',{'stdinfo':s})

def retreival(request):
    data=student.objects.all()
    return render(request,'result.html',{'records':data})

	std_info.html
	-------------
<!DOCTYPE html>
<html>
<body bgcolor="cyan">
<form action="" method="post">
{% csrf_token %}
{{stdinfo.as_p}}
<input type="submit" value="add">
</form>
</body>
<html>

	result.html
	------------
<!DOCTYPE html>
<html>
<body>
<table border="2">
<tr><th>Sid</th>
    <th>Sname</th>
    <th>Sadd</th>
    <th>Scontact</th>
</tr>
{% for rec in records %}
  <tr><td>{{rec.sid}}</td>
      <td>{{rec.sname}}</td>
      <td>{{rec.sadd}}</td>
      <td>{{rec.scontact}}</td>
  </tr>
{% endfor %}
</table>
</body>
</html> 

step11:
-----
to configure the url patterns for our views in urls.py file.

	urls.py
	--------
from django.contrib import admin
from django.urls import path
from app23 import views
urlpatterns = [
    path('admin/', admin.site.urls),
    path('sin/',views.studentinfo),
    path('res/',views.retreival)
]

step12:
-------
to start the server

	python manage.py runserver

step13:
------
to send the request to the server

	http://127.0.0.1:8000/sin

	http://127.0.0.1:8000/res


project structure:
-----------------
	proj23
	   |--->app23
	   |      |--->models.py
           |      |--->forms.py
           |      |--->views.py
           |--->proj23
	   |      |--->settings.py
	   |      |--->urls.py
	   |--->templates
	   |      |--->std_info.html
           |      |--->result.html
           |--->manage.py



Admin sites are integral part of any website. 

Django provides an admin app.

We will create our own admin site called cadmin.

We are communicating the django admin site first we need to create a superuser

	we can create a superuser,by following command

	python manage.py createsuperuser


In django admin site,The Groups and Users under "Authentication and Autherization" are coming from django.contrib.auth.

Django uses
	Groups model to handle the permissions.
	The Users model refers to the users of the site.

Adding our models into Django admin site:
-----------------------------------------
By default ,django admin app does not load any model from the apps we are created.

To add a model to the django admin site we have to modify admin.py file available inside every app.

Note:
------
If admin.py file is not available inside the our application,just we can create a new file and called it as admin.py and then add our model into admin.py file.

ex:
---
step1:
----
to create a project

	django-admin startproject proj24

step2:
------
goto project location and to create an application in that project location.

	cd proj24

	python manage.py startapp app24

step3:
------
to install our application in settings.py file of the project

	settings.py
	-----------
INSTALLED_APPS = [
   
    'app24'
]

step4:
-----
to create a model in models.py file of the application

	models.py
	---------
from django.db import models

# Create your models here.
class employe(models.Model):
    eid=models.IntegerField(primary_key=True)
    ename=models.CharField(max_length=20)
    sal=models.DecimalField(max_digits=6,decimal_places=2)
    dno=models.IntegerField()
    dob=models.DateField(auto_now=True)

step5:
-----
to check the errors in our model

	python manage.py check

step6:
-----
to apply the makemigrations

	python manage.py makemigrations

step7:
------
to apply the migrate

	python manage.py migrate

step8:
----
to communicate the django admin site,first we need to create a superuser

	python manage.py createsuperuser

(myvenv) F:\django4pmnew\proj24>python manage.py createsuperuser
Username (leave blank to use 'dell'): siva
Email address: siva123@gmail.com
Password:
Password (again):
The password is too similar to the username.
This password is too short. It must contain at least 8 characters.
Bypass password validation and create user anyway? [y/N]: y
Superuser created successfully.

step9:
------
to start the server

	python manage.py runserver

step10:
-----
to send the request to the server

	http://127.0.0.1:8000/admin

how to add our model into admin sute?
--------------------------------------
	admin.py
	--------
from django.contrib import admin
from .models import employe
# Register your models here.
admin.site.register(employe)
